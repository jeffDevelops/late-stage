{
  "name": "api",
  "type": "commonjs",
  "scripts": {
    "branch": "npm run migrate:reset && npm run migrate:restore",
    "migrate:reset": "npx prisma migrate reset --force",
    "migrate:restore": "chmod +x ./database/scripts/restore.sh && dotenv ./database/scripts/restore.sh",
    "migrate:dev": "npx prisma migrate dev --name",
    "migrate:deploy": "npx prisma migrate deploy",
    "generate": "npx prisma generate",
    "build": "tsc --project ./tsconfig.json",
    "dev": "NODE_ENV=development ./node_modules/.bin/nodemon -L --exec npm run dev:process -e ts,json,js",
    "dev:process": "ts-node ./src/index.ts",
    "prod": "NODE_ENV=production npm run start",
    "start": "pm2 startOrRestart --wait-ready --listen-timeout 10000 ecosystem.config.js",
    "wait-on:api": "wait-on http-get://localhost:3002/_healthcheck",
    "test": "VERBOSE=true nodemon -L --exec npm run spawn:api:test:all -e ts,json,js",
    "test:ci": "npm run spawn:api:test:all",
    "test:file": "NODE_ENV=test nodemon -e ts,json,js -L --exec npm run spawn:api:test:file",
    "spawn:api:test:file": "concurrently --names \"api,test\" --prefix-colors \"#ff5964,#fffafc\" \"NODE_ENV=test TEST_PORT=3002 npm run dev:process\" \"npm run wait-on:api && TEST_PORT=3002 NODE_ENV=test VERBOSE=true ts-node --transpile-only $FILE\"",
    "test:all": "./node_modules/.bin/uvu -r ts-node/register",
    "spawn:api:test:all": "concurrently --names \"api,tests\" --prefix-colors \"#ff5964,#fffafc\" \"NODE_ENV=test TEST_PORT=3002 npm run dev:process\" \"npm run wait-on:api && TEST_PORT=3002 NODE_ENV=test npm run test:all\"",
    "test:coverage": "c8 --include src --exclude=api/test-utils/authenticate npm run test:ci",
    "test:report": "c8 report --reporter=text-lcov > coverage.lcov"
  },
  "dependencies": {
    "@prisma/client": "^3.9.2",
    "@sendgrid/mail": "^7.6.0",
    "altair-fastify-plugin": "^4.2.1",
    "bcryptjs": "^2.4.3",
    "class-validator": "^0.14.0",
    "dayjs": "^1.10.7",
    "dotenv": "^16.0.0",
    "dotenv-cli": "^4.1.1",
    "fastify": "^3.25.0",
    "fastify-cookie": "^5.5.0",
    "fastify-cors": "^6.0.2",
    "fastify-file-upload": "^3.0.1",
    "fastify-multer": "^2.0.2",
    "fastify-multipart": "^5.2.1",
    "fastify-static": "^4.5.0",
    "graphql": "^15.3.0",
    "graphql-scalars": "^1.14.1",
    "imagekit": "^3.2.4",
    "jsonwebtoken": "^8.5.1",
    "mercurius": "^8.12.0",
    "multer": "^1.4.4",
    "node-cron": "^3.0.0",
    "reflect-metadata": "^0.1.13",
    "sanitize-html": "^2.6.1",
    "type-graphql": "^1.1.1",
    "typegraphql-prisma": "^0.19.0"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.2",
    "@types/cookie": "^0.4.1",
    "@types/graphql-fields": "^1.3.4",
    "@types/isomorphic-fetch": "^0.0.35",
    "@types/jsonwebtoken": "^8.5.7",
    "@types/multer": "^1.4.7",
    "@types/node": "^16.11.13",
    "@types/node-cron": "^3.0.1",
    "@types/sanitize-html": "^2.6.2",
    "@types/set-cookie-parser": "^2.4.2",
    "@types/sinon": "^10.0.6",
    "@types/validator": "^13.7.1",
    "@types/ws": "^8.2.2",
    "c8": "^7.11.0",
    "concurrently": "^7.0.0",
    "forever": "^4.0.1",
    "graphql-fields": "^2.0.3",
    "isomorphic-fetch": "^3.0.0",
    "loadr": "^0.1.1",
    "nodemon": "^2.0.15",
    "prisma": "^3.9.2",
    "set-cookie-parser": "^2.4.8",
    "sinon": "^12.0.1",
    "ts-lib": "^0.0.5",
    "ts-node": "^10.4.0",
    "tsm": "^2.2.1",
    "typescript": "^4.5.4",
    "uvu": "^0.5.2",
    "wait-on": "^6.0.0"
  }
}
